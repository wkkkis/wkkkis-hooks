{"version":3,"sources":["../src/cli.ts"],"sourcesContent":["import prompts from \"prompts\";\nimport fs from \"node:fs\";\nimport path from \"node:path\";\n\nif (typeof (globalThis as any).fetch !== \"function\") {\n  console.error(\"Node 18+ required: global fetch() not found.\");\n  process.exit(1);\n}\n\nconst REGISTRY_URL =\n  \"https://raw.githubusercontent.com/wkkkis/hooks-registry/main/registry.json\";\n\nconst CONFIG_FILE = \"hooks.config.json\";\n\ntype ProjectConfig = {\n  baseDir: string;\n  addIndex: boolean;\n  stripUseClient: boolean;\n  aliasPrefix?: string;\n  aliasTarget?: string;\n};\n\nconst DEFAULT_CFG: ProjectConfig = {\n  baseDir: \"src/hooks\",\n  addIndex: true,\n  stripUseClient: false,\n};\n\nasync function getJSON<T>(url: string): Promise<T> {\n  const res = await fetch(url);\n  if (!res.ok) {\n    const hint =\n      res.status === 404\n        ? \"Not found (check baseUrl/path/branch or repo privacy).\"\n        : res.status === 403 || res.status === 401\n        ? \"Forbidden/Unauthorized (is the registry repo private?).\"\n        : \"\";\n    throw new Error(`Fetch ${res.status}: ${url}${hint ? \" — \" + hint : \"\"}`);\n  }\n  return res.json() as Promise<T>;\n}\n\nasync function getText(url: string) {\n  const res = await fetch(url);\n  if (!res.ok) throw new Error(`Fetch ${res.status}: ${url}`);\n  return res.text();\n}\n\nasync function ensureDir(d: string) {\n  await fs.promises.mkdir(d, { recursive: true });\n}\n\nfunction cwd(...p: string[]) {\n  return path.resolve(process.cwd(), ...p);\n}\n\nfunction findConfig(startDir = process.cwd()): string | null {\n  let dir = path.resolve(startDir);\n  while (true) {\n    const p = path.join(dir, CONFIG_FILE);\n    if (fs.existsSync(p)) return p;\n    const parent = path.dirname(dir);\n    if (parent === dir) break;\n    dir = parent;\n  }\n  return null;\n}\n\nfunction readConfig(): ProjectConfig | null {\n  const p = findConfig();\n  if (!p) return null;\n  try {\n    const data = JSON.parse(fs.readFileSync(p, \"utf8\"));\n    const cfg: ProjectConfig = {\n      baseDir:\n        typeof data.baseDir === \"string\" ? data.baseDir : DEFAULT_CFG.baseDir,\n      addIndex:\n        typeof data.addIndex === \"boolean\"\n          ? data.addIndex\n          : DEFAULT_CFG.addIndex,\n      stripUseClient:\n        typeof data.stripUseClient === \"boolean\"\n          ? data.stripUseClient\n          : DEFAULT_CFG.stripUseClient,\n      aliasPrefix:\n        typeof data.aliasPrefix === \"string\" ? data.aliasPrefix : undefined,\n      aliasTarget:\n        typeof data.aliasTarget === \"string\" ? data.aliasTarget : undefined,\n    };\n    return cfg;\n  } catch {\n    return null;\n  }\n}\n\nasync function writeConfig(cfg: ProjectConfig) {\n  const p = cwd(CONFIG_FILE);\n  await fs.promises.writeFile(p, JSON.stringify(cfg, null, 2) + \"\\n\", \"utf8\");\n  console.log(`✔ Saved ${CONFIG_FILE}`);\n  await ensureDir(cwd(cfg.baseDir));\n}\n\nasync function backupFile(filePath: string) {\n  if (!fs.existsSync(filePath)) return null;\n  const bak = `${filePath}.bak`;\n  await fs.promises.copyFile(filePath, bak);\n  return bak;\n}\n\nfunction remapToBaseDir(originalTo: string, baseDir: string) {\n  const norm = originalTo.replace(/\\\\/g, \"/\");\n  const replaced = norm.replace(\n    /^(?:src\\/)?hooks/,\n    baseDir.replace(/\\\\/g, \"/\")\n  );\n  return replaced;\n}\n\nasync function cmdSearch(query: string) {\n  const q = query.toLowerCase();\n  const registry = await getJSON<any>(REGISTRY_URL);\n\n  const results: Array<{\n    id: string;\n    score: number;\n    desc?: string;\n    tags?: string[];\n  }> = [];\n\n  const hooks: any[] = registry.hooks ?? [];\n  const limit = 8; // параллельных запросов\n  let i = 0;\n  async function next() {\n    const h = hooks[i++];\n    if (!h) return;\n    try {\n      const meta = await getJSON<any>(\n        `${registry.baseUrl}/${h.path}/meta.json`\n      );\n      const hay = [\n        h.id,\n        meta.name ?? \"\",\n        meta.description ?? \"\",\n        ...(meta.tags ?? []),\n      ]\n        .join(\" \")\n        .toLowerCase();\n      const words = q.split(/\\s+/).filter(Boolean);\n      const score = hay.includes(q)\n        ? 2\n        : words.some((w) => hay.includes(w))\n        ? 1\n        : 0;\n      if (score > 0) {\n        results.push({\n          id: h.id,\n          score,\n          desc: meta.description,\n          tags: meta.tags,\n        });\n      }\n    } catch {\n      /* skip broken meta */\n    }\n    await next();\n  }\n  await Promise.all(\n    Array.from({ length: Math.min(limit, hooks.length) }, next)\n  );\n\n  results.sort((a, b) => b.score - a.score || a.id.localeCompare(b.id));\n  if (results.length === 0) {\n    console.log(\"No matches.\");\n    return;\n  }\n  for (const r of results) {\n    const tags = r.tags?.length ? ` [${r.tags.join(\", \")}]` : \"\";\n    console.log(\"-\", r.id, r.desc ? `— ${r.desc}${tags}` : tags);\n  }\n}\n\nfunction parseLocalHookVersion(filePath: string): {\n  id?: string;\n  version?: string;\n} {\n  if (!fs.existsSync(filePath)) return {};\n  const first = fs.readFileSync(filePath, \"utf8\").slice(0, 2048);\n  const m = first.match(/hook:([a-z0-9-]+)@([0-9]+\\.[0-9]+\\.[0-9]+)/i);\n  return m ? { id: m[1], version: m[2] } : {};\n}\n\nasync function listLocalHooks(\n  baseDir: string\n): Promise<Array<{ id: string; file: string }>> {\n  const indexTs = cwd(baseDir, \"index.ts\");\n  const indexJs = cwd(baseDir, \"index.js\");\n  if (fs.existsSync(indexTs) || fs.existsSync(indexJs)) {\n    const indexPath = fs.existsSync(indexTs) ? indexTs : indexJs;\n    const content = await fs.promises.readFile(indexPath, \"utf8\");\n    const ids = [\n      ...content.matchAll(/export\\s+\\*\\s+from\\s+['\"]\\.\\/(.+)['\"];?/g),\n    ].map((m) => m[1]);\n    return ids.map((id) => {\n      const ts = cwd(baseDir, `${id}.ts`);\n      const js = cwd(baseDir, `${id}.js`);\n      return { id, file: fs.existsSync(ts) ? ts : js };\n    });\n  } else {\n    const baseAbs = cwd(baseDir);\n    if (!fs.existsSync(baseAbs)) return [];\n    const files = (await walk(baseAbs)).filter((p) =>\n      /[/\\\\]use-[^/\\\\]+\\.(t|j)s$/.test(p)\n    );\n    return files.map((f) => ({ id: fileBaseName(f), file: f }));\n  }\n}\n\nfunction cmpSemver(a: string, b: string) {\n  const pa = a.split(\".\").map((n) => +n),\n    pb = b.split(\".\").map((n) => +n);\n  for (let i = 0; i < 3; i++) {\n    const d = (pa[i] || 0) - (pb[i] || 0);\n    if (d) return d;\n  }\n  return 0;\n}\n\nasync function cmdOutdated() {\n  const cfg = readConfig();\n  const baseDir = cfg?.baseDir ?? \"src/hooks\";\n  const registry = await getJSON<any>(REGISTRY_URL);\n  const locals = await listLocalHooks(baseDir);\n\n  if (locals.length === 0) {\n    console.log(\"No installed hooks found.\");\n    return;\n  }\n\n  let any = false;\n  await Promise.all(\n    locals.map(async (l) => {\n      const entry = registry.hooks.find((h: any) => h.id === l.id);\n      if (!entry) return;\n      try {\n        const meta = await getJSON<any>(\n          `${registry.baseUrl}/${entry.path}/meta.json`\n        );\n        const localVer = parseLocalHookVersion(l.file).version ?? \"0.0.0\";\n        const remoteVer = meta.version ?? \"0.0.0\";\n        if (cmpSemver(remoteVer, localVer) > 0) {\n          any = true;\n          console.log(`⚠ ${l.id}  ${localVer}  →  ${remoteVer}`);\n        }\n      } catch {}\n    })\n  );\n  if (!any) console.log(\"All hooks are up to date.\");\n}\n\nfunction fileBaseName(destPath: string) {\n  return path.parse(destPath).name;\n}\n\nfunction removeUseClient(src: string) {\n  return src.replace(/^\\s*['\"]use client['\"];\\s*\\r?\\n/, \"\");\n}\n\nfunction escapeRegex(s: string) {\n  return s.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nfunction toPosixPath(p: string) {\n  return p.replace(/\\\\/g, \"/\");\n}\n\nfunction rewriteAliasImports(\n  code: string,\n  aliasPrefix: string | undefined,\n  aliasTarget: string | undefined,\n  destAbsFile: string,\n  projectRootAbs: string\n) {\n  if (!aliasPrefix || !aliasTarget) return code;\n  const prefix = aliasPrefix.endsWith(\"/\") ? aliasPrefix : aliasPrefix + \"/\";\n  const targetAbs = path.resolve(projectRootAbs, aliasTarget);\n\n  const re = new RegExp(\n    [\n      `(from\\\\s+['\"])${escapeRegex(prefix)}([^'\"]+)(['\"])`, // import x from '@/...'\n      `(import\\\\s*\\\\(\\\\s*['\"])${escapeRegex(prefix)}([^'\"]+)(['\"]\\\\s*\\\\))`, // import('...') dynamic\n      `(export\\\\s*\\\\*\\\\s*from\\\\s*['\"])${escapeRegex(prefix)}([^'\"]+)(['\"])`, // export * from '...'\n      `(require\\\\(\\\\s*['\"])${escapeRegex(prefix)}([^'\"]+)(['\"]\\\\s*\\\\))`, // require('...')\n    ].join(\"|\"),\n    \"g\"\n  );\n\n  return code.replace(re, (...args: any[]) => {\n    // args: match, then 12 capture groups, then offset, then input\n    const groups = args.slice(1, 13);\n    let left = \"\",\n      subpath = \"\",\n      right = \"\";\n    for (let i = 0; i < groups.length; i += 3) {\n      if (groups[i]) {\n        left = groups[i];\n        subpath = groups[i + 1];\n        right = groups[i + 2];\n        break;\n      }\n    }\n    if (!subpath) return args[0];\n\n    const abs = path.resolve(targetAbs, subpath);\n    const rel = toPosixPath(path.relative(path.dirname(destAbsFile), abs));\n    const normalized = rel.startsWith(\".\") ? rel : \"./\" + rel;\n    return `${left}${normalized}${right}`;\n  });\n}\n\nasync function installHook(\n  hookId: string,\n  baseDir: string,\n  addIndex: boolean,\n  options?: {\n    dry?: boolean;\n    force?: boolean;\n    stripUseClient?: boolean;\n  }\n) {\n  const registry = await getJSON<any>(REGISTRY_URL);\n  const baseUrl = registry.baseUrl;\n  const entry = registry.hooks.find((h: any) => h.id === hookId);\n  if (!entry) throw new Error(`Unknown hook: ${hookId}`);\n\n  const meta = await getJSON<any>(`${baseUrl}/${entry.path}/meta.json`);\n  console.log(`Installing ${meta.name} (${meta.id})`);\n\n  const cfg = readConfig() ?? DEFAULT_CFG;\n  const stripClient = options?.stripUseClient ?? cfg.stripUseClient;\n\n  let lastExportName: string | null = null;\n\n  for (const f of meta.files) {\n    const destRemapped = remapToBaseDir(f.to, baseDir);\n    const dest = cwd(destRemapped);\n    const src = `${baseUrl}/${entry.path}/${f.from}`;\n\n    if (options?.dry) {\n      console.log(\"[dry] would write\", path.relative(process.cwd(), dest));\n      lastExportName = fileBaseName(dest);\n      continue;\n    }\n\n    let content = await getText(src);\n\n    if (stripClient) content = removeUseClient(content);\n\n    content = rewriteAliasImports(\n      content,\n      cfg.aliasPrefix,\n      cfg.aliasTarget,\n      dest,\n      process.cwd()\n    );\n\n    await ensureDir(path.dirname(dest));\n    const header = `/* Installed via wkkkis-hooks | hook:${meta.id}@${\n      meta.version ?? \"0.0.0\"\n    } | registry:${registry.version ?? \"0\"} */\\n`;\n\n    if (fs.existsSync(dest) && !options?.force) {\n      const bak = await backupFile(dest);\n      if (bak) console.log(\"↺ backup\", path.relative(process.cwd(), bak));\n    }\n    await fs.promises.writeFile(dest, header + content, \"utf8\");\n    console.log(\"✔\", path.relative(process.cwd(), dest));\n\n    lastExportName = fileBaseName(dest);\n  }\n\n  if (addIndex && lastExportName) {\n    const indexFile = \"index.ts\";\n    const indexPath = cwd(baseDir, indexFile);\n    const exportLine = `export * from \"./${lastExportName}\";\\n`;\n\n    if (options?.dry) {\n      console.log(\n        \"[dry] would update\",\n        path.relative(process.cwd(), indexPath)\n      );\n    } else {\n      if (fs.existsSync(indexPath)) {\n        const curr = await fs.promises.readFile(indexPath, \"utf8\");\n        if (!curr.includes(exportLine)) {\n          await fs.promises.appendFile(indexPath, exportLine, \"utf8\");\n          console.log(\"↻ updated\", path.relative(process.cwd(), indexPath));\n        }\n      } else {\n        await ensureDir(path.dirname(indexPath));\n        await fs.promises.writeFile(indexPath, exportLine, \"utf8\");\n        console.log(\"✔ created\", path.relative(process.cwd(), indexPath));\n      }\n    }\n  }\n\n  if (meta.peerDependencies) {\n    console.log(\"Peer deps:\", JSON.stringify(meta.peerDependencies));\n  }\n}\n\nasync function cmdList() {\n  const registry = await getJSON<any>(REGISTRY_URL);\n  registry.hooks.forEach((h: any) => {\n    const desc = h.description ? ` — ${h.description}` : \"\";\n    console.log(\"-\", h.id + desc);\n  });\n}\n\nasync function cmdInfo(hookId: string) {\n  const registry = await getJSON<any>(REGISTRY_URL);\n  const baseUrl = registry.baseUrl;\n  const entry = registry.hooks.find((h: any) => h.id === hookId);\n  if (!entry) throw new Error(`Unknown hook: ${hookId}`);\n\n  const meta = await getJSON<any>(`${baseUrl}/${entry.path}/meta.json`);\n  console.log(`\\n${meta.name} (${meta.id})`);\n  if (meta.description) console.log(meta.description);\n  if (meta.peerDependencies)\n    console.log(\"peerDeps:\", JSON.stringify(meta.peerDependencies));\n  console.log(\"files:\");\n  for (const f of meta.files) {\n    console.log(\"  -\", f.from, \"→\", f.to);\n  }\n  console.log(\"\");\n}\n\nasync function cmdAdd(\n  hookId?: string,\n  opts?: { baseDir?: string; addIndex?: boolean }\n) {\n  const cfg = readConfig();\n  const registry = await getJSON<any>(REGISTRY_URL);\n\n  let id = hookId;\n  if (!id) {\n    const ans = await prompts({\n      type: \"autocomplete\",\n      name: \"hook\",\n      message: \"Choose a hook to add\",\n      choices: registry.hooks.map((h: any) => ({ title: h.id, value: h.id })),\n    });\n    id = ans.hook;\n    if (!id) return;\n  }\n  const baseDir = opts?.baseDir ?? cfg?.baseDir ?? \"src/hooks\";\n  const addIndex =\n    typeof opts?.addIndex === \"boolean\" ? opts.addIndex : cfg?.addIndex ?? true;\n\n  await installHook(id, baseDir, addIndex, {\n    stripUseClient: readConfig()?.stripUseClient ?? false,\n  });\n}\n\nasync function cmdInit() {\n  const isTty =\n    process.stdout.isTTY === true &&\n    !process.argv.includes(\"--yes\") &&\n    !process.argv.includes(\"-y\");\n\n  let answers: any = {\n    addIndex: true,\n    baseDir: \"src/hooks\",\n    stripUseClient: false,\n    aliasPrefix: \"\",\n    aliasTarget: \"src\",\n    useAlias: false,\n  };\n\n  if (isTty) {\n    try {\n      const a = await prompts([\n        {\n          type: \"toggle\",\n          name: \"addIndex\",\n          message: \"Maintain index file with re-exports?\",\n          initial: true,\n          active: \"yes\",\n          inactive: \"no\",\n        },\n        {\n          type: \"text\",\n          name: \"baseDir\",\n          message: \"Where should hooks be installed?\",\n          initial: \"src/hooks\",\n          validate: (v: string) => (v.trim() ? true : \"Path is required\"),\n        },\n        {\n          type: \"select\",\n          name: \"framework\",\n          message: \"Target framework?\",\n          choices: [\n            { title: \"Next.js\", value: \"next\" },\n            { title: \"React (Vite/CRA/etc.)\", value: \"react\" },\n            { title: \"Other\", value: \"other\" },\n          ],\n          initial: 0,\n        },\n        {\n          type: (prev, values) =>\n            values.framework === \"next\" ? null : \"toggle\",\n          name: \"stripUseClient\",\n          message: 'Strip \"use client\" directive from installed hooks?',\n          initial: false,\n          active: \"strip\",\n          inactive: \"keep\",\n        },\n        {\n          type: \"toggle\",\n          name: \"useAlias\",\n          message: \"Rewrite path aliases in imports? (e.g. @/ to relative)\",\n          initial: false,\n          active: \"on\",\n          inactive: \"off\",\n        },\n        {\n          type: (prev, values) => (values.useAlias ? \"text\" : null),\n          name: \"aliasPrefix\",\n          message: \"Alias prefix\",\n          initial: \"@/\",\n        },\n        {\n          type: (prev, values) => (values.useAlias ? \"text\" : null),\n          name: \"aliasTarget\",\n          message: \"Alias points to folder\",\n          initial: \"src\",\n        },\n      ]).catch(() => ({}));\n      answers = { ...answers, ...a };\n    } catch {}\n\n    if (!answers.baseDir || typeof answers.addIndex !== \"boolean\") {\n      console.log(\"Canceled.\");\n      return;\n    }\n  } else {\n    console.log(\"(non-TTY) Using defaults for init.\");\n  }\n\n  const cfg: ProjectConfig = {\n    baseDir: answers.baseDir,\n    addIndex: !!answers.addIndex,\n    stripUseClient: !!answers.stripUseClient,\n    aliasPrefix: answers.useAlias ? answers.aliasPrefix || \"@/\" : undefined,\n    aliasTarget: answers.useAlias ? answers.aliasTarget || \"src\" : undefined,\n  };\n\n  await writeConfig(cfg);\n\n  if (isTty) {\n    try {\n      const registry = await getJSON<any>(REGISTRY_URL);\n      const pick = await prompts({\n        type: \"autocomplete\",\n        name: \"hook\",\n        message: \"Install a sample hook now?\",\n        choices: [\n          { title: \"Skip\", value: \"__SKIP__\" },\n          ...registry.hooks.map((h: any) => ({ title: h.id, value: h.id })),\n        ],\n      }).catch(() => ({ hook: \"__SKIP__\" }));\n\n      const chosen = pick?.hook ?? \"__SKIP__\";\n      if (chosen !== \"__SKIP__\") {\n        await installHook(chosen, cfg.baseDir, cfg.addIndex, {\n          stripUseClient: cfg.stripUseClient,\n        });\n      } else {\n        console.log(\"You can add hooks later with: wkkkis-hooks add <hook>\");\n      }\n    } catch (e: any) {\n      console.log(\"Skip sample install:\", e?.message ?? String(e));\n    }\n  }\n}\n\nasync function cmdUpdate(\n  hookId: string,\n  opts?: {\n    baseDir?: string;\n    addIndex?: boolean;\n    dry?: boolean;\n    force?: boolean;\n  }\n) {\n  const cfg = readConfig();\n  const baseDir = opts?.baseDir ?? cfg?.baseDir ?? \"src/hooks\";\n  const addIndex =\n    typeof opts?.addIndex === \"boolean\" ? opts.addIndex : cfg?.addIndex ?? true;\n\n  console.log(\"(update) pulling latest from registry…\");\n\n  await installHook(hookId, baseDir, addIndex, {\n    dry: opts?.dry,\n    force: opts?.force,\n    stripUseClient: cfg?.stripUseClient ?? false,\n  });\n}\n\nasync function cmdRemove(hookId: string, opts?: { baseDir?: string }) {\n  const cfg = readConfig();\n  const baseDir = opts?.baseDir ?? cfg?.baseDir ?? \"src/hooks\";\n\n  const registry = await getJSON<any>(REGISTRY_URL);\n  const baseUrl = registry.baseUrl;\n  const entry = registry.hooks.find((h: any) => h.id === hookId);\n  if (!entry) throw new Error(`Unknown hook: ${hookId}`);\n  const meta = await getJSON<any>(`${baseUrl}/${entry.path}/meta.json`);\n\n  for (const f of meta.files) {\n    const destRemapped = remapToBaseDir(f.to, baseDir);\n    const dest = cwd(destRemapped);\n    const base = fileBaseName(dest);\n\n    if (fs.existsSync(dest)) {\n      await fs.promises.unlink(dest);\n      console.log(\"✖\", path.relative(process.cwd(), dest));\n    }\n\n    for (const idxName of [\"index.ts\", \"index.js\"]) {\n      const indexPath = cwd(baseDir, idxName);\n      if (!fs.existsSync(indexPath)) continue;\n      const curr = await fs.promises.readFile(indexPath, \"utf8\");\n      const reg = new RegExp(\n        String.raw`^export \\* from \"\\./${base}\";\\r?\\n?`,\n        \"m\"\n      );\n      if (reg.test(curr)) {\n        const next = curr.replace(reg, \"\");\n        await fs.promises.writeFile(indexPath, next, \"utf8\");\n        console.log(\"↻ updated\", path.relative(process.cwd(), indexPath));\n      }\n    }\n  }\n}\n\nasync function walk(dir: string, acc: string[] = []): Promise<string[]> {\n  const entries = await fs.promises.readdir(dir, { withFileTypes: true });\n  for (const e of entries) {\n    const full = path.join(dir, e.name);\n    if (e.isDirectory()) await walk(full, acc);\n    else acc.push(full);\n  }\n  return acc;\n}\n\nasync function cmdReadme() {\n  const cfg = readConfig();\n  const baseDir = cfg?.baseDir ?? \"src/hooks\";\n  const registry = await getJSON<any>(REGISTRY_URL);\n\n  const locals = await listLocalHooks(baseDir);\n  if (locals.length === 0) {\n    console.log(\"No hooks found to document.\");\n    return;\n  }\n\n  let md = `# Installed Hooks\\n\\n`;\n  for (const { id } of locals) {\n    const entry = registry.hooks.find((h: any) => h.id === id);\n    if (!entry) continue;\n    const meta = await getJSON<any>(\n      `${registry.baseUrl}/${entry.path}/meta.json`\n    );\n    md += `## ${meta.name}\\n`;\n    if (meta.description) md += `${meta.description}\\n\\n`;\n    if (meta.tags?.length) md += `tags: ${meta.tags.join(\", \")}\\n\\n`;\n    md += `\\`import { ${meta.name} } from \"${baseDir}\"\\`\\n\\n`;\n  }\n\n  const dest = cwd(\"HOOKS.md\");\n  await fs.promises.writeFile(dest, md, \"utf8\");\n  console.log(\"✔ HOOKS.md generated\");\n}\n\nasync function cmdPreset(name: string) {\n  const cfg = readConfig();\n  const baseDir = cfg?.baseDir ?? \"src/hooks\";\n  const addIndex = cfg?.addIndex ?? true;\n\n  if (name === \"essentials\") {\n    const hooks = [\n      \"use-boolean\",\n      \"use-debounce\",\n      \"use-disclosure\",\n      \"use-event-listener\",\n      \"use-clipboard\",\n    ];\n    for (const h of hooks) {\n      await installHook(h, baseDir, addIndex, {\n        force: true,\n        stripUseClient: readConfig()?.stripUseClient ?? false,\n      });\n    }\n    console.log(\"✔ essentials preset installed\");\n  } else {\n    console.log(\"Unknown preset:\", name);\n  }\n}\n\nasync function cmdDoctor() {\n  const cfg = readConfig();\n  const baseDir = cfg?.baseDir ?? \"src/hooks\";\n  const registry = await getJSON<any>(REGISTRY_URL);\n  const locals = await listLocalHooks(baseDir);\n\n  if (locals.length === 0) {\n    console.log(\"No installed hooks found.\");\n    return;\n  }\n\n  let ok = true;\n  for (const l of locals) {\n    if (!fs.existsSync(l.file)) {\n      ok = false;\n      console.log(`✖ missing file: ${path.relative(process.cwd(), l.file)}`);\n      continue;\n    }\n    const parsed = parseLocalHookVersion(l.file);\n    if (!parsed.id) {\n      ok = false;\n      console.log(\n        `✖ no header: ${path.relative(\n          process.cwd(),\n          l.file\n        )} (reinstall this hook)`\n      );\n      continue;\n    }\n    if (parsed.id !== l.id) {\n      ok = false;\n      console.log(`✖ id mismatch: file=${l.id} header=${parsed.id}`);\n    } else {\n      const exists = registry.hooks.some((h: any) => h.id === l.id);\n      if (!exists) {\n        ok = false;\n        console.log(`✖ not in registry: ${l.id}`);\n      } else {\n        console.log(`✔ ${l.id} (${parsed.version})`);\n      }\n    }\n  }\n\n  if (ok) console.log(\"Doctor: all good.\");\n}\n\nasync function cmdMigrate(newBaseDir: string) {\n  if (!newBaseDir || !newBaseDir.trim())\n    throw new Error(\"Usage: wkkkis-hooks migrate --path=<newDir>\");\n  const cfg = readConfig() ?? DEFAULT_CFG;\n  const oldBase = cfg.baseDir;\n  if (path.resolve(oldBase) === path.resolve(newBaseDir)) {\n    console.log(\"Already using\", newBaseDir);\n    return;\n  }\n\n  await ensureDir(cwd(newBaseDir));\n  const files = fs.existsSync(cwd(oldBase))\n    ? (await walk(cwd(oldBase))).filter(\n        (p) => p.endsWith(\".ts\") || p.endsWith(\".js\")\n      )\n    : [];\n  for (const full of files) {\n    const basename = path.basename(full);\n    const target = cwd(newBaseDir, basename);\n    await fs.promises.copyFile(full, target);\n    console.log(\"→\", path.relative(process.cwd(), target));\n  }\n\n  const nextCfg: ProjectConfig = {\n    baseDir: newBaseDir,\n    addIndex: cfg.addIndex,\n    stripUseClient: cfg.stripUseClient,\n    aliasPrefix: cfg.aliasPrefix,\n    aliasTarget: cfg.aliasTarget,\n  };\n  await writeConfig(nextCfg);\n  console.log(\"✔ migrated config to\", newBaseDir);\n}\n\nasync function main() {\n  const args = process.argv.slice(2);\n  const cmd = args[0];\n\n  try {\n    if (cmd === \"list\") return cmdList();\n\n    if (cmd === \"info\") {\n      const id = args[1];\n      if (!id) throw new Error(\"Usage: wkkkis-hooks info <hook>\");\n      return cmdInfo(id);\n    }\n\n    if (cmd === \"init\") return cmdInit();\n\n    if (cmd === \"add\") {\n      const hookId = args[1];\n      const baseDirFlag = args.find((a) => a.startsWith(\"--path=\"));\n      const noIndex = args.includes(\"--no-index\");\n      const baseDir = baseDirFlag ? baseDirFlag.split(\"=\")[1] : undefined;\n      return cmdAdd(hookId, { baseDir, addIndex: noIndex ? false : undefined });\n    }\n\n    if (cmd === \"update\") {\n      const hookId = args[1];\n      if (!hookId) throw new Error(\"Usage: wkkkis-hooks update <hook>\");\n      const baseDirFlag = args.find((a) => a.startsWith(\"--path=\"));\n      const dry = args.includes(\"--dry\");\n      const force = args.includes(\"--force\");\n      const baseDir = baseDirFlag ? baseDirFlag.split(\"=\")[1] : undefined;\n      return cmdUpdate(hookId, { baseDir, dry, force });\n    }\n\n    if (cmd === \"remove\") {\n      const hookId = args[1];\n      if (!hookId) throw new Error(\"Usage: wkkkis-hooks remove <hook>\");\n      const baseDirFlag = args.find((a) => a.startsWith(\"--path=\"));\n      const baseDir = baseDirFlag ? baseDirFlag.split(\"=\")[1] : undefined;\n      return cmdRemove(hookId, { baseDir });\n    }\n\n    if (cmd === \"readme\") return cmdReadme();\n\n    if (cmd === \"preset\") {\n      const name = args[1];\n      if (!name) throw new Error(\"Usage: wkkkis-hooks preset <name>\");\n      return cmdPreset(name);\n    }\n\n    if (cmd === \"search\") {\n      const q = args.slice(1).join(\" \").trim();\n      if (!q) throw new Error(\"Usage: wkkkis-hooks search <query>\");\n      return cmdSearch(q);\n    }\n\n    if (cmd === \"outdated\") return cmdOutdated();\n\n    if (cmd === \"doctor\") return cmdDoctor();\n\n    if (cmd === \"migrate\") {\n      const baseDirFlag = args.find((a) => a.startsWith(\"--path=\"));\n      if (!baseDirFlag)\n        throw new Error(\"Usage: wkkkis-hooks migrate --path=<newDir>\");\n      const newDir = baseDirFlag.split(\"=\")[1];\n      return cmdMigrate(newDir);\n    }\n\n    console.log(\n      `wkkkis-hooks <command>\n\nCommands:\n  init                          Initialize project config (path + index)\n  list                          Show available hooks\n  info <hook>                   Show hook meta and files\n  add <hook> [--path=..] [--no-index]\n  update <hook> [--path=..] [--force] [--dry]\n  remove <hook> [--path=..]\n  readme                        Generate HOOKS.md (works without index.ts)\n  preset <name>                 Install a set (e.g., \"essentials\")\n  search <query>                Search hooks by id/name/description/tags\n  outdated                      Show hooks that have newer versions in registry\n  doctor                        Validate installed hooks/files against registry\n  migrate --path=...            Copy all hooks to a new baseDir and update config\n\nFlags:\n  --path=src/shared/hooks       Override install path\n  --no-index                    Do not touch index.ts on add\n  --force                       Overwrite files without .bak on update\n  --dry                         Show what would change (update only)\n`\n    );\n  } catch (e: any) {\n    console.error(\"Error:\", e.message);\n    process.exit(1);\n  }\n}\n\nmain();\n"],"mappings":"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","names":["fs","path","prompts"]}